name: Build, test and deploy to production (digdir) on merge to master branch

on:
  push:
    branches:
      - master

jobs:
  build-test-and-deploy-production:
    name: Build, test, publish and deploy to production environment
    runs-on: ubuntu-latest

    steps:
     - uses: actions/checkout@v1

         - name: Setup pyhton environment
           uses: actions/setup-python@v1
           with:
             python-version: 3.7

         - name: Install pipenv
           uses: dschep/install-pipenv-action@v1

         - name: Install invoke
           run: pip install invoke

         - name: Setup gcloud CLI
           uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
           with:
             version: '270.0.0'
             service_account_email: ${{ secrets.GCP_SA_DIGDIR_FDK_GCR_EMAIL }}
             service_account_key: ${{ secrets.GCP_SA_DIGDIR_FDK_GCR_KEY }}

      # Configure docker to use the gcloud command-line tool as a credential helper
     - run: gcloud auth configure-docker

     - name: Build Docker image with latest tag
       run: docker build . -t eu.gcr.io/digdir-fdk-infra/fdk-fulltext-search:$GITHUB_SHA -t eu.gcr.io/digdir-fdk-infra/fdk-fulltext-search:latest

     - name: Run tests
       run: |
         invoke unit-test
         invoke contract-test --compose --image=eu.gcr.io/digdir-fdk-infra/fdk-fulltext-search:latest
         invoke stop-docker

     - name: Publish docker image to Google Cloud
       run: docker -- push eu.gcr.io/digdir-fdk-infra/fdk-fulltext-search

     - name: Apply Helm template
       uses: stefanprodan/kube-tools@v1
       with:
         helm: 2.14.3
         command: |
           helm init --client-only
           helm repo add fdk https://informasjonsforvaltning.github.io/helm-chart/
           helm fetch --untar --untardir ./helm fdk/fdk-fulltext-search
           helm template --set DOCKER_IMAGE_NAME="eu.gcr.io/digdir-fdk-infra/fdk-fulltext-search:$GITHUB_SHA" -f ./helm/fdk-fulltext-search/values/prod.yaml ./helm/fdk-fulltext-search/ > ./kubectlapply.yaml
           chmod o+w ./kubectlapply.yaml
           cat kubectlapply.yaml

     - name: Get kubeconfig file from GKE
       uses: machine-learning-apps/gke-kubeconfig@master
       with:
         application_credentials: ${{ secrets.DIGDIR_FDK_PROD_AUTODEPLOY }}
         project_id: digdir-fdk-prod
         location_zone: europe-north1-a
         cluster_name: digdir-fdk-prod

     - name: Deploy to production
       uses: docker://bitnami/kubectl:latest
       env:
         KUBECONFIG: '/github/workspace/.kube/config'
       with:
         args: "apply -f ./kubectlapply.yaml --force"

     - name: Notify slack of deploy
       env:
         SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
       uses: pullreminders/slack-action@master
       with:
         args: '{\"channel\":\"C7NTH118T\",\"text\":\"Application fdk-fulltext-search deployed to digdir-production\"}'

     - name: Trigger deploy to demo
       uses: peter-evans/repository-dispatch@master
       with:
         token: ${{ secrets.DISPATCH_TOKEN }}
         event-type: deploy-demo-digdir
         client-payload: '{"sha": "${{ github.sha }}"}'
