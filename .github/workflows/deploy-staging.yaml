name: Deploy to staging

on:
  pull_request:
    types: [ready_for_review, opened, reopened, synchronize]
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build, test, publish and deploy to staging environment
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
    - uses: actions/checkout@v2

    - name: Setup gcloud CLI for image-store
      uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.GCP_SA_DIGDIR_FDK_GCR_KEY }}
        export_default_credentials: true

    - name: Configure docker to use the gcloud command-line tool as a credential helper
      run: gcloud auth configure-docker eu.gcr.io

    - name: Cache Docker layers
      uses: actions/cache@v2.1.6
      with:
        path: .cache
        key: ${{ runner.os }}-nox-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-nox-

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
        architecture: x64

    - name: Install dependencies
      run: |
        pip install poetry==1.1.11
        pip install nox==2021.10.1
        pip install nox-poetry==0.9.0

    - name: Set max map count for elasticsearch
      run: sudo sysctl -w vm.max_map_count=262144

    - name: Build image and run tests with nox
      run: nox

    - name: Tag and publish docker image to Google Cloud
      run: |
        docker tag eu.gcr.io/digdir-fdk-infra/fdk-fulltext-search:test eu.gcr.io/digdir-fdk-infra/fdk-fulltext-search:$GITHUB_SHA
        docker tag eu.gcr.io/digdir-fdk-infra/fdk-fulltext-search:test eu.gcr.io/digdir-fdk-infra/fdk-fulltext-search:staging_latest
        docker rmi eu.gcr.io/digdir-fdk-infra/fdk-fulltext-search:test
        docker -- push eu.gcr.io/digdir-fdk-infra/fdk-fulltext-search -a

    - name: Apply Helm template
      run: |
        helm repo add fdk https://informasjonsforvaltning.github.io/helm-chart/
        helm fetch --untar --untardir ./helm fdk/fdk-fulltext-search
        helm template --set DOCKER_IMAGE_NAME="eu.gcr.io/digdir-fdk-infra/fdk-fulltext-search:$GITHUB_SHA" \
        -f ./helm/fdk-fulltext-search/values/staging.yaml \
        ./helm/fdk-fulltext-search/ > ./kubectlapply.yaml
        chmod o+w ./kubectlapply.yaml
        cat kubectlapply.yaml

    - name: Setup gcloud CLI for deploy
      uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.DIGDIR_FDK_DEV_AUTODEPLOY }}
        export_default_credentials: true

    - name: Deploy to GCP
      run: |
        gcloud container clusters get-credentials digdir-fdk-dev --region europe-north1-a --project digdir-fdk-dev
        kubectl apply -f ./kubectlapply.yaml --force

    - name: Notify slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        author_name: 'Application: fdk-fulltext-search | Environment: staging'
        fields: commit,author,workflow
      env:
        GITHUB_TOKEN: ${{ github.token }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: always()
